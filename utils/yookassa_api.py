# utils/yookassa_api.py

import os
import uuid
import hmac
import hashlib
from typing import Dict, Any
from yookassa import Configuration, Payment
from flask import Flask, request, jsonify
from utils.db import set_payment, mark_paid
from utils.vk_api_wrapper import VKBot

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ .env
Configuration.account_id = os.getenv("YOOKASSA_SHOP_ID")
Configuration.secret_key = os.getenv("YOOKASSA_SECRET_KEY")

BASE_URL = os.getenv("BASE_URL", "https://example.com")
PRIVATE_GROUP_URL = os.getenv("PRIVATE_GROUP_URL", "https://vk.com/club233286501")
YOOKASSA_SECRET_KEY = os.getenv("YOOKASSA_SECRET_KEY")

app = Flask(__name__)


# === 1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ ===
def create_payment_for_user(user_vk_id: int, amount: float) -> Dict[str, Any]:
    """
    –°–æ–∑–¥–∞—ë—Ç –ø–ª–∞—Ç—ë–∂ –≤ YooKassa, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ë–î –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É.
    """
    idempotence_key = uuid.uuid4().hex
    payment = Payment.create({
        "amount": {"value": f"{amount:.2f}", "currency": "RUB"},
        "confirmation": {
            "type": "redirect",
            "return_url": f"{BASE_URL}/"
        },
        "capture": True,
        "description": f"–û–ø–ª–∞—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}",
        "metadata": {"user_vk_id": str(user_vk_id)}
    }, idempotence_key)

    payment_id = payment.id
    confirmation_url = payment.confirmation.confirmation_url

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ PostgreSQL
    set_payment(user_vk_id, payment_id, amount, "RUB")

    return {"payment_id": payment_id, "url": confirmation_url}


# === 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ ===
def verify_signature(secret: str, data: bytes, header: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ webhook-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç YooKassa (HMAC SHA256).
    """
    if not header:
        return False
    digest = hmac.new(secret.encode(), msg=data, digestmod=hashlib.sha256).hexdigest()
    if header.startswith("sha256="):
        header = header.split("=", 1)[1]
    return hmac.compare_digest(digest, header)


# === 3Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã ===
def process_payment_success(payment_id: str, user_vk_id: str):
    """
    –û—Ç–º–µ—á–∞–µ—Ç –ø–ª–∞—Ç—ë–∂ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    mark_paid(payment_id)
    vk = VKBot()
    vk.send_message(
        int(user_vk_id),
        "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! üéâ –î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –æ—Ç–∫—Ä—ã—Ç."
    )
    vk.send_message(
        int(user_vk_id),
        f"üìö –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {PRIVATE_GROUP_URL}"
    )


# === 4Ô∏è‚É£ Webhook –æ—Ç YooKassa ===
@app.route("/yookassa/webhook", methods=["POST"])
def webhook():
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç YooKassa –æ —Å—Ç–∞—Ç—É—Å–µ –ø–ª–∞—Ç–µ–∂–µ–π.
    """
    raw_data = request.data
    signature = request.headers.get("X-Request-Signature-SHA256")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
    if not verify_signature(YOOKASSA_SECRET_KEY, raw_data, signature):
        print("‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω.")
        return jsonify({"status": "forbidden"}), 403

    data = request.json
    event = data.get("event")

    if event == "payment.succeeded":
        payment_obj = data.get("object", {})
        payment_id = payment_obj.get("id")
        metadata = payment_obj.get("metadata", {})
        user_vk_id = metadata.get("user_vk_id")

        print(f"‚úÖ –ü–ª–∞—Ç—ë–∂ {payment_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_vk_id}")
        process_payment_success(payment_id, user_vk_id)

    else:
        print(f"‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ {event}, –Ω–µ 'payment.succeeded'")

    return jsonify({"status": "ok"})


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Flask-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–∏—ë–º–∞ webhook –æ—Ç YooKassa...")
    app.run(host="0.0.0.0", port=int(os.getenv("FLASK_PORT", 5000)))
